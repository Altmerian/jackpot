plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.7'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.github.davidmc24.gradle.plugin.avro' version '1.9.1'
}

group = 'com.pshakhlovich'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(25)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		name = 'confluent'
		url = uri('https://packages.confluent.io/maven')
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.avro:avro'
	implementation 'io.confluent:kafka-avro-serializer:7.7.0'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.awaitility:awaitility:4.2.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Configure Avro plugin to generate sources in the standard location
avro {
	stringType = 'String'
	fieldVisibility = 'PRIVATE'
	enableDecimalLogicalType = true
}

// Add generated Avro sources to the main source set
sourceSets {
	main {
		java {
			srcDir 'build/generated-main-avro-java'
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += ['-parameters']
}

tasks.named('compileJava') {
	dependsOn tasks.named('generateAvroJava')
}

tasks.named('test') {
	useJUnitPlatform()
}
